const Joi = require('joi')
const express=require('express')
const app =express();

app.use(express.json())

const courses=[
    { id:1 ,name:'html course'},
    { id:2 ,name:'css course'},
    { id:3 ,name:'nodejs course'}
];
 
app.get('/', (req,res) =>{
    res.send('hello world');
});

app.get('/api/courses',(req,res) =>{
    res.send(courses);
})

app.post('/api/courses',(req,res) =>{

    const{ error }=courseValidation(req.body)//ersult.error
    if(error) return res.status(400).send(result.error.details[0].message);
  //validate

    const course ={
        id:courses.length+1,
        name: req.body.name
    }
    courses.push(course)
res.send(course);
});

app.put('/api/courses/:id', (req,res) =>{
     //look up the class
     //if not existing,return 404
     const course=courses.find(c => c.id === parseInt(req.params.id));
     if (!course) return res.sendStatus(404).send('the course with given id not found')

     const{ error }=courseValidation(req.body)//ersult.error
     if(error)return; res.status(400).send(result.error.details[0].message);
            
  //validate
     //if invalide return 400//400 bad request
       course.name=req.body.name
        res.send(course)

    });
     //update the course
     //return the updated course

 
function courseValidation(course){
 
    const schema={
        name:Joi.string().min(3).required()
    };

       return Joi.validate(course,schema)
}



app.get('/api/courses/:id', (req,res) => {
    const course=courses.find(c => c.id === parseInt(req.params.id));
    if (!course) return res.sendStatus(404).send('the course with given id not found')
    res.send(course)

});

//port
const port =process.env.PORT || 4000
app.listen(port, ()=> console.log(`listening on port ${port} ...`))

app.delete('/api/courses/:id',(req,res)=>{
    const course=courses.find(c => c.id === parseInt(req.params.id));
    if (!course) return res.sendStatus(404).send('the course with given id not found')
    //lookup the course
    //not exiting ,return 404

    //delete
    const index =courses.indexOf(course);
    courses.splice(index,1)

    //return the same course
    res.send(course)
})
